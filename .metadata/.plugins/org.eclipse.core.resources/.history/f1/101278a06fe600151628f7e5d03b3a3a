package com.dearbear.classStudy;
public class CClassInfoStudy extends Shap implements ChangeShp{
	final double PI = 3.141592653;
	public InClass m_inclass = new InClass();		
	public static void main(String args[]) {
		CClassInfoStudy classInfoStudy = new CClassInfoStudy();
		CClassInfoStudy.InClass inClassInfo = classInfoStudy.new InClass();
		System.out.println("hello");
		System.out.println(classInfoStudy.m_inclass.m_x);
	}
	
	@Override 
	public void draw(){
		System.out.println("override draw now");
	}
	
	@Override 
	public void change(){
		System.out.println("override change now");
	}
	public class InClass{
		public int m_x = 2, m_y = 0;
		private void test() {
			double length = PI * 2;
		}
	}
}

abstract class Shap{
	int m_x, m_y;
	abstract void draw();
}

interface ChangeShp{
	void change();
}

interface OutInterfac{
	void f();
}

class OutClass{
	private class ClassInner implements OutInterfac{
		@Override
		void f(){
			System.out.println("内部私有类重载接口实现");
		}
	}
}